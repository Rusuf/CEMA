{"ast":null,"code":"import{useState,useCallback}from'react';import{handleError}from'../utils/errorHandler';/**\r\n * Custom hook to handle API requests with loading state and error handling\r\n * @param {Function} apiCallFn - API call function to execute\r\n * @param {*} initialData - Initial state for the data\r\n */const useFetch=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const[data,setData]=useState(initialData);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const execute=useCallback(async function(apiCallFn){try{setLoading(true);setError(null);for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}const response=await apiCallFn(...args);setData(response.data);return response.data;}catch(err){const errorMessage=handleError(err,apiCallFn.name||'useFetch');setError(errorMessage);return null;}finally{setLoading(false);}},[]);const clearError=useCallback(()=>{setError(null);},[]);return{data,loading,error,execute,setData,clearError};};export default useFetch;","map":{"version":3,"names":["useState","useCallback","handleError","useFetch","initialData","arguments","length","undefined","data","setData","loading","setLoading","error","setError","execute","apiCallFn","_len","args","Array","_key","response","err","errorMessage","name","clearError"],"sources":["C:/Users/HP/CEMA/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { handleError } from '../utils/errorHandler';\r\n\r\n/**\r\n * Custom hook to handle API requests with loading state and error handling\r\n * @param {Function} apiCallFn - API call function to execute\r\n * @param {*} initialData - Initial state for the data\r\n */\r\nconst useFetch = (initialData = null) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const execute = useCallback(async (apiCallFn, ...args) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await apiCallFn(...args);\r\n      setData(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = handleError(err, apiCallFn.name || 'useFetch');\r\n      setError(errorMessage);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { data, loading, error, execute, setData, clearError };\r\n};\r\n\r\nexport default useFetch; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC7C,OAASC,WAAW,KAAQ,uBAAuB,CAEnD;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,QAAQ,CAAG,QAAAA,CAAA,CAAwB,IAAvB,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CAClC,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAACI,WAAW,CAAC,CAC7C,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAc,OAAO,CAAGb,WAAW,CAAC,eAAOc,SAAS,CAAc,CACxD,GAAI,CACFJ,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAAG,IAAA,CAAAX,SAAA,CAAAC,MAAA,CAH8BW,IAAI,KAAAC,KAAA,CAAAF,IAAA,GAAAA,IAAA,MAAAG,IAAA,GAAAA,IAAA,CAAAH,IAAA,CAAAG,IAAA,IAAJF,IAAI,CAAAE,IAAA,IAAAd,SAAA,CAAAc,IAAA,GAIjD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,SAAS,CAAC,GAAGE,IAAI,CAAC,CACzCR,OAAO,CAACW,QAAQ,CAACZ,IAAI,CAAC,CACtB,MAAO,CAAAY,QAAQ,CAACZ,IAAI,CACtB,CAAE,MAAOa,GAAG,CAAE,CACZ,KAAM,CAAAC,YAAY,CAAGpB,WAAW,CAACmB,GAAG,CAAEN,SAAS,CAACQ,IAAI,EAAI,UAAU,CAAC,CACnEV,QAAQ,CAACS,YAAY,CAAC,CACtB,MAAO,KAAI,CACb,CAAC,OAAS,CACRX,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAa,UAAU,CAAGvB,WAAW,CAAC,IAAM,CACnCY,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEL,IAAI,CAAEE,OAAO,CAAEE,KAAK,CAAEE,OAAO,CAAEL,OAAO,CAAEe,UAAW,CAAC,CAC/D,CAAC,CAED,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}