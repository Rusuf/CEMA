{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { handleError } from '../utils/errorHandler';\n\n/**\r\n * Custom hook to handle API requests with loading state and error handling\r\n * @param {Function} apiCallFn - API call function to execute\r\n * @param {*} initialData - Initial state for the data\r\n */\nconst useFetch = (initialData = null) => {\n  _s();\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const execute = useCallback(async (apiCallFn, ...args) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await apiCallFn(...args);\n      setData(response.data);\n      return response.data;\n    } catch (err) {\n      const errorMessage = handleError(err, apiCallFn.name || 'useFetch');\n      setError(errorMessage);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return {\n    data,\n    loading,\n    error,\n    execute,\n    setData,\n    clearError\n  };\n};\n_s(useFetch, \"1AlUW/Hq9QtRo2kYeDOTigq78n0=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useCallback","handleError","useFetch","initialData","_s","data","setData","loading","setLoading","error","setError","execute","apiCallFn","args","response","err","errorMessage","name","clearError"],"sources":["C:/Users/HP/CEMA/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { handleError } from '../utils/errorHandler';\r\n\r\n/**\r\n * Custom hook to handle API requests with loading state and error handling\r\n * @param {Function} apiCallFn - API call function to execute\r\n * @param {*} initialData - Initial state for the data\r\n */\r\nconst useFetch = (initialData = null) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const execute = useCallback(async (apiCallFn, ...args) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await apiCallFn(...args);\r\n      setData(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      const errorMessage = handleError(err, apiCallFn.name || 'useFetch');\r\n      setError(errorMessage);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { data, loading, error, execute, setData, clearError };\r\n};\r\n\r\nexport default useFetch; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,uBAAuB;;AAEnD;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGA,CAACC,WAAW,GAAG,IAAI,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACI,WAAW,CAAC;EAC7C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,OAAO,GAAGX,WAAW,CAAC,OAAOY,SAAS,EAAE,GAAGC,IAAI,KAAK;IACxD,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAMI,QAAQ,GAAG,MAAMF,SAAS,CAAC,GAAGC,IAAI,CAAC;MACzCP,OAAO,CAACQ,QAAQ,CAACT,IAAI,CAAC;MACtB,OAAOS,QAAQ,CAACT,IAAI;IACtB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZ,MAAMC,YAAY,GAAGf,WAAW,CAACc,GAAG,EAAEH,SAAS,CAACK,IAAI,IAAI,UAAU,CAAC;MACnEP,QAAQ,CAACM,YAAY,CAAC;MACtB,OAAO,IAAI;IACb,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,UAAU,GAAGlB,WAAW,CAAC,MAAM;IACnCU,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEL,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEL,OAAO;IAAEY;EAAW,CAAC;AAC/D,CAAC;AAACd,EAAA,CA1BIF,QAAQ;AA4Bd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}