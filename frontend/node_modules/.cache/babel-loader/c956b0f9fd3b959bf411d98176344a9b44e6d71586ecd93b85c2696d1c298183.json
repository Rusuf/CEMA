{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import Card from'../components/common/Card';import Table from'../components/common/Table';import Button from'../components/common/Button';import Input from'../components/common/Input';import{clientsApi,programsApi}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Enrollments=()=>{const navigate=useNavigate();const[clients,setClients]=useState([]);const[loading,setLoading]=useState(true);const[searchTerm,setSearchTerm]=useState('');useEffect(()=>{fetchClients();},[]);const fetchClients=async function(){let search=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{setLoading(true);const response=await clientsApi.getAll(search);console.log(\"Clients data:\",response.data);setClients(response.data);}catch(error){console.error('Error fetching clients:',error);}finally{setLoading(false);}};const handleSearch=e=>{e.preventDefault();fetchClients(searchTerm);};const handleViewClient=client=>{navigate(`/clients/${client.id}`);};// Create a processed list of clients with programs they're enrolled in\nconst processedClients=clients.map(client=>{const programNames=client.enrollments&&client.enrollments.length>0?client.enrollments.map(e=>e.program_name).filter(name=>name).join(', '):'None';return{...client,programNames,enrollmentCount:client.enrollments?client.enrollments.length:0};});const columns=[{header:'Client ID',accessor:'id'},{header:'Name',accessor:'name'},{header:'Enrolled Programs',accessor:'programNames'},{header:'Enrollment Count',accessor:'enrollmentCount'},{header:'Action',cell:row=>/*#__PURE__*/_jsx(Button,{size:\"sm\",onClick:e=>{e.stopPropagation();navigate(`/clients/${row.id}`);},children:\"View Details\"})}];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-gray-900\",children:\"Program Enrollments\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"View and manage client enrollments in health programs\"})]}),/*#__PURE__*/_jsx(Card,{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(Input,{id:\"search\",name:\"search\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),placeholder:\"Search by client name\",className:\"mb-0 flex-1\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Search\"})]})}),/*#__PURE__*/_jsx(Card,{title:\"Client Enrollments\",children:loading?/*#__PURE__*/_jsx(\"p\",{className:\"text-center py-4\",children:\"Loading enrollments...\"}):/*#__PURE__*/_jsx(Table,{columns:columns,data:processedClients,onRowClick:handleViewClient})})]});};export default Enrollments;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Card","Table","Button","Input","clientsApi","programsApi","jsx","_jsx","jsxs","_jsxs","Enrollments","navigate","clients","setClients","loading","setLoading","searchTerm","setSearchTerm","fetchClients","search","arguments","length","undefined","response","getAll","console","log","data","error","handleSearch","e","preventDefault","handleViewClient","client","id","processedClients","map","programNames","enrollments","program_name","filter","name","join","enrollmentCount","columns","header","accessor","cell","row","size","onClick","stopPropagation","children","className","onSubmit","value","onChange","target","placeholder","type","title","onRowClick"],"sources":["C:/Users/HP/CEMA/frontend/src/pages/Enrollments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Card from '../components/common/Card';\nimport Table from '../components/common/Table';\nimport Button from '../components/common/Button';\nimport Input from '../components/common/Input';\nimport { clientsApi, programsApi } from '../services/api';\n\nconst Enrollments = () => {\n  const navigate = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetchClients();\n  }, []);\n\n  const fetchClients = async (search = '') => {\n    try {\n      setLoading(true);\n      const response = await clientsApi.getAll(search);\n      console.log(\"Clients data:\", response.data);\n      setClients(response.data);\n    } catch (error) {\n      console.error('Error fetching clients:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    fetchClients(searchTerm);\n  };\n\n  const handleViewClient = (client) => {\n    navigate(`/clients/${client.id}`);\n  };\n\n  // Create a processed list of clients with programs they're enrolled in\n  const processedClients = clients.map(client => {\n    const programNames = client.enrollments && client.enrollments.length > 0\n      ? client.enrollments.map(e => e.program_name).filter(name => name).join(', ')\n      : 'None';\n    \n    return {\n      ...client,\n      programNames,\n      enrollmentCount: client.enrollments ? client.enrollments.length : 0\n    };\n  });\n\n  const columns = [\n    { header: 'Client ID', accessor: 'id' },\n    { header: 'Name', accessor: 'name' },\n    { header: 'Enrolled Programs', accessor: 'programNames' },\n    { header: 'Enrollment Count', accessor: 'enrollmentCount' },\n    { \n      header: 'Action',\n      cell: (row) => (\n        <Button \n          size=\"sm\" \n          onClick={(e) => {\n            e.stopPropagation();\n            navigate(`/clients/${row.id}`);\n          }}\n        >\n          View Details\n        </Button>\n      )\n    }\n  ];\n\n  return (\n    <div>\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Program Enrollments</h1>\n        <p className=\"text-gray-600\">View and manage client enrollments in health programs</p>\n      </div>\n\n      <Card className=\"mb-6\">\n        <form onSubmit={handleSearch} className=\"flex space-x-4\">\n          <Input\n            id=\"search\"\n            name=\"search\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"Search by client name\"\n            className=\"mb-0 flex-1\"\n          />\n          <Button type=\"submit\">Search</Button>\n        </form>\n      </Card>\n\n      <Card title=\"Client Enrollments\">\n        {loading ? (\n          <p className=\"text-center py-4\">Loading enrollments...</p>\n        ) : (\n          <Table \n            columns={columns} \n            data={processedClients}\n            onRowClick={handleViewClient}\n          />\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default Enrollments; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}